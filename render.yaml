services:
  # === Web Frontend (Next.js) ===
  - type: web
    name: h4c-web
    env: node
    plan: starter  # Free tier
    buildCommand: ./scripts/render-build.sh
    buildCommand: |
      echo "=== H4C Web Build Starting ===" &&
      echo "Node: $(node --version)" &&
      echo "NPM: $(npm --version)" &&
      echo "Working directory: $(pwd)" &&
      echo "Directory structure:" &&
      ls -la &&
      echo "=== Creating content if missing ===" &&
      if [ ! -d "web/content/mega_article" ]; then
        mkdir -p web/content/mega_article &&
        echo '{"slug":"foreword","title":"Welcome to H4C","sections":[{"heading":"Introduction","body":"Welcome to the H4C platform"}]}' > web/content/mega_article/foreword.json &&
        echo '{"slug":"bitcoin","title":"Bitcoin Guide","sections":[{"heading":"Introduction","body":"Learn about Bitcoin"}]}' > web/content/mega_article/bitcoin.json &&
        echo '{"slug":"ethereum","title":"Ethereum Guide","sections":[{"heading":"Introduction","body":"Learn about Ethereum"}]}' > web/content/mega_article/ethereum.json &&
        echo '{"slug":"algorand","title":"Algorand Guide","sections":[{"heading":"Introduction","body":"Learn about Algorand"}]}' > web/content/mega_article/algorand.json &&
        echo "Created sample content files"
      fi &&
      echo "=== Installing dependencies ===" &&
      npm ci --production=false --loglevel=error &&
      echo "=== Building web ===" &&
      cd web &&
      if [ ! -f "next-env.d.ts" ]; then
        echo '/// <reference types="next" />' > next-env.d.ts &&
        echo '/// <reference types="next/image-types/global" />' >> next-env.d.ts
      fi &&
      npm ci --production=false --loglevel=error &&
      echo "Content check:" &&
      ls -la content/mega_article/ 2>/dev/null || ls -la ../content/mega_article/ 2>/dev/null || echo "Using fallback content" &&
      npm run build &&
      echo "=== Build Complete ==="
    startCommand: cd web && npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: NODE_VERSION
        value: "18.20.5"
      - key: PORT
        value: "10000"
      - key: NEXT_PUBLIC_SITE_URL
        fromService:
          type: web
          name: h4c-web
          property: host
      - key: ALGO_USD_FALLBACK
        value: "0.20"
      # Add if you have the bot API running elsewhere
      - key: BOT_API_URL
        value: ""  # Set this if you have a bot service
      - key: ADMIN_JWT_SECRET
        sync: false  # Set in Render dashboard
    autoDeploy: true
    
  # === Optional: Discord Bot Worker (comment out if not needed) ===
  # - type: worker
  #   name: h4c-bot
  #   env: node
  #   plan: starter
  #   buildCommand: |
  #     npm ci --production=false &&
  #     cd bot &&
  #     npm ci --production=false
  #   startCommand: cd bot && npm start
  #   envVars:
  #     - key: NODE_ENV
  #       value: production
  #     - key: BOT_TOKEN
  #       sync: false
  #     - key: MONGODB_URI
  #       sync: false
  #     - key: REDIS_URL
  #       sync: false
  #     - key: DISCORD_GUILD_ID
  #       sync: false
  #     - key: ADMIN_JWT_SECRET
  #       sync: false
